# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Frontend CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on:
      ubuntu-latest
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js LTS version
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "npm"
          cache-dependency-path: fe/package-lock.json
      - run: cd fe && npm ci &&  npm run build --if-present
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: "reactApp"
          # A file, directory or wildcard pattern that describes what to upload
          path: fe/build
          retention-days: 2

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: "reactApp"
      - run: cp index.html 404.html
      - name: rsync deployments
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete
          path: /*
          remote_path: /home/${{ secrets.UBERSPACE_USER }}/html/
          remote_host: ${{ secrets.UBERSPACE_USER }}.uber.space
          remote_user: ${{ secrets.UBERSPACE_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY_PRIVATE }}

  deleteSourceMaps:
    needs: [deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.UBERSPACE_USER }}.uber.space
          username: ${{ secrets.UBERSPACE_USER }}
          key: ${{ secrets.DEPLOY_KEY_PRIVATE }}
          port: 22
          script: find html/ -name "*.map" | xargs rm -f
